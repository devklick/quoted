//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "season")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub season_no: i32,
    pub show_id: i32,
    pub name: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::episode::Entity")]
    Episode,
    #[sea_orm(has_many = "super::quote::Entity")]
    Quote,
    #[sea_orm(
        belongs_to = "super::show::Entity",
        from = "Column::ShowId",
        to = "super::show::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Show,
}

impl Related<super::episode::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Episode.def()
    }
}

impl Related<super::quote::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Quote.def()
    }
}

impl Related<super::show::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Show.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
