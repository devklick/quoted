//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "quote_part")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub quote_id: i32,
    pub order_no: i32,
    pub character_id: i32,
    pub value: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::character::Entity",
        from = "Column::CharacterId",
        to = "super::character::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Character,
    #[sea_orm(
        belongs_to = "super::quote::Entity",
        from = "Column::QuoteId",
        to = "super::quote::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Quote,
}

impl Related<super::character::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Character.def()
    }
}

impl Related<super::quote::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Quote.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
